---
- name: Install go
  dnf:
    name: golang-go
    state: present
  tags: 
  - ingo
  - never

- name: Remove go
  dnf:
    name: golang-go
    state: absent
  tags: 
  - ungo
  - never

#- name: install Docker dependencies
#  dnf:
#    name: "{{item}}"
#    state: present
#    update_cache: yes
#   loop:
#     - apt-transport-https
#     - ca-certificates
#     - curl
#     - gnupg-agent
#     - software-properties-common
#     - python3-docker 
#  tags:
#  - indocker
#  - never

#- name: Sign Docker  GPG
#  rpm_key:
#        url: https://download.docker.com/linux/ubuntu/gpg
#        state: present
#  tags:
#  - indocker
#  - never

#- name: Install Docker repository
#  yum_repository:
#     repo: deb https://download.docker.com/linux/ubuntu focal stable
#     state: present
#  tags:
#  - indockerr
#  - never

- name: Install Docker
  dnf:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
     - docker-ce
     - docker-ce-cli
     - containerd.io
  tags:
  - indocker
  - never

- name: Make sure docker is started
  service:
     name: docker
     state: started
     enabled: yes
  tags:
  - indocker
  - never

- name: Install git
  dnf:
    name: git-all
    state: present
  tags:
  - ingit
  - never

- name: Remove git
  dnf:
    name: git-all
    state: absent
  tags:
  - ungit
  - never

- name: Remove Docker
  dnf:
    name: "{{item}}"
    state: absent
    update_cache: yes
  loop:
     - docker-ce
     - docker-ce-cli
     - containerd.io
  tags:
  - undocker
  - never

- name: Install Docker compose
  dnf:
    name: docker-compose
    state: present
  tags:
  - indockercompose
  - never

- name: Remove Docker compose
  dnf:
    name: docker-compose
    state: absent
  tags:
  - undockercompose
  - never

- name: Create portainer container
  docker_container:
    name: portainer
    image: portainer/portainer-ce
    state: started
    recreate: yes
    restart_policy: always
    published_ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  tags:
  - inportainer
  - never

- name: Create transmission container
  docker_container:
    name: transmission
    image: linuxserver/transmission
    state: started
    recreate: yes
    restart_policy: always
    published_ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/transmission:/downloads
  tags:
  - intransmission
  - never

- name: Create jupyter container
  docker_container:
    name: jupyter
    image: jupyter/minimal-notebook
    state: started
    recreate: yes
    restart_policy: always
    published_ports:
      - "8888:8888"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $(pwd):/home/jovyan/work
  tags:
  - injupyter
  - never

- name: Install Nginx container
  docker_container:
    name: nginx
    image: nginx
    state: started
    recreate: yes
    restart_policy: always
    published_ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_nginx_conf:/etc/nginx/
      - nginx_html:/usr/share/nginx/html/
  tags:
  - innginx
  - never

- name: Install RDP
  dnf:
    name: "{{item}}"
    state: absent 
    update_cache: yes
  loop:
     - xfce4
     - teamviewer
  tags:
  - inrdp
  - never

- name: Install MC
  dnf:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
     - mc
  tags:
  - inmc
  - never
 
- name: Install MC
  dnf:
    name: "{{item}}"
    state: absent
    update_cache: yes
  loop:
     - mc
  tags:
  - unmc
  - never
  
